name: Release and Package

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v4.0.1)'
        required: true
        type: string

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Extract version
      id: extract_version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        
    - name: Generate changelog
      id: changelog
      run: |
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "## What's Changed in ${{ steps.extract_version.outputs.version }}" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        git log --pretty=format:"* %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.extract_version.outputs.version }}
        release_name: LLM Family Pack ${{ steps.extract_version.outputs.version }}
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: false

  build-packages:
    name: Build Distribution Packages  
    needs: create-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        format: [deb, rpm, snap]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install build dependencies
      run: |
        sudo apt-get update
        case "${{ matrix.format }}" in
          deb)
            sudo apt-get install -y debhelper devscripts
            ;;
          rpm)
            sudo apt-get install -y rpm
            ;;
          snap)
            sudo snap install snapcraft --classic
            ;;
        esac
        
    - name: Build package
      run: |
        case "${{ matrix.format }}" in
          deb)
            echo "Building DEB package..."
            cd packaging/debian
            bash build-deb.sh
            ;;
          rpm)
            echo "Building RPM package..."
            # RPM build logic here
            ;;
          snap)
            echo "Building Snap package..."
            snapcraft --destructive-mode
            ;;
        esac
        
    - name: Upload package artifact
      uses: actions/upload-artifact@v3
      with:
        name: package-${{ matrix.format }}
        path: |
          **/*.${{ matrix.format }}
          
  publish-npm:
    name: Publish to NPM
    needs: create-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
  publish-docker:
    name: Publish Docker Image
    needs: create-release  
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: llmfamilypack/llm-family-pack
        tags: |
          type=ref,event=tag
          type=raw,value=latest
          
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64